version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3
        environment:
          BUNDLER_VERSION: 2.0.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  deploy_dev:
    docker:
      - image: circleci/ruby:2.6.3
    steps:
      - checkout
      - run:
          name: Deploy Dev to Heroku
          command: |
            git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME_DEV.git master
  deploy_stg:
    docker:
      - image: circleci/ruby:2.6.3
    steps:
      - checkout
      - run:
          name: Deploy Stg to Heroku
          command: |
            git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME_STG.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy_dev:
          requires:
            - build
          filters:
            branches:
              only: dev
      - deploy_stg:
          requires:
            - build
          filters:
            branches:
              only: master
